// Generated by CoffeeScript 1.6.3
var DNS, HTTP, HTTPS, ProxyRequest, Replay, httpRequest, original_lookup;

DNS = require("dns");

HTTP = require("http");

HTTPS = require("https");

ProxyRequest = require("./proxy");

Replay = require("./replay");

httpRequest = HTTP.request;

HTTP.request = function(options, callback) {
  var request;
  if (options && options.headers && options.headers["Upgrade"] === "websocket") {
    return httpRequest(options, callback);
  }
  request = new ProxyRequest(options, Replay, Replay.chain.start);
  if (callback) {
    request.once("response", function(response) {
      return callback(response);
    });
  }
  return request;
};

HTTPS.request = function(options, callback) {
  options.protocol = "https:";
  return HTTP.request(options, callback);
};

original_lookup = DNS.lookup;

DNS.lookup = function(domain, family, callback) {
  var _ref;
  if (!callback) {
    _ref = [null, family], family = _ref[0], callback = _ref[1];
  }
  if (Replay.isLocalhost(domain)) {
    if (family === 6) {
      return callback(null, "::1", 6);
    } else {
      return callback(null, "127.0.0.1", 4);
    }
  } else {
    return original_lookup(domain, family, callback);
  }
};

module.exports = Replay;
